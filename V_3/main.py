import time
import math
import monitor
import user_input

def Main_Monitor(terminate, shell_memory_function, del_threshold: int = 3) -> (dict,dict):
    def get_memory(list_dict: list):
        """"""
        memory, exe_name = dict(), dict()
        for process in list_dict:
            memory[process['pid']] = process['data']
            exe_name[process['pid']] = process['name']
        return memory,exe_name

    def get_proccess_name(memory: dict) -> list:
        return list(set(memory.keys()))


    initial_memory = dict()
    times = dict()
    time_black_list = dict()
    white_list = dict()
    pattern = dict()

    while True:
        data = shell_memory_function()
        memory, exe_name = get_memory(data)
        proccesses = get_proccess_name(memory)
        for prog_pid in proccesses:

            if initial_memory.get(prog_pid) == None or initial_memory.get(prog_pid) > memory[prog_pid]:
                initial_memory[prog_pid] = memory[prog_pid]

            if int(abs(memory[prog_pid]-initial_memory[prog_pid])) >= 190:

                if (times.get(prog_pid) == None) or (time.time() - times.get(prog_pid) > 10):
                    #(time.time() - times.get(prog_pid) > 10)
                    if pattern.get('strt') == None:
                        pattern['strt'] = pattern.get('strt')

                    times[prog_pid] = time.time()
                    print('initial time for ', prog_pid)
                if (time.time() - times.get(prog_pid) > 10):           
                    times[prog_pid] = time.time()
                    print('initial time for ', prog_pid)

            if times.get(prog_pid) is not None:
                if math.ceil(int(abs(times.get(prog_pid)-time.time()))) in range(9, 11):
                    time_black_list[prog_pid] = time_black_list.get(
                        prog_pid, 0) + 1
                    times[prog_pid] = time.time() # Resetting the time for the process

                    print('Program with pid '+str(prog_pid) + ' Blacklisted')

            if time_black_list.get(prog_pid) is not None:
                """"""
                # always blocked 
                if time_black_list[prog_pid] >= del_threshold:
                    if white_list.get(prog_pid) == 1:
                        print(prog_pid,"is white listed")
                        continue

                    # get the name from data[memory big dictionary]
                    suspect_name = exe_name[prog_pid]
                    print('----------------------------   DETECTED   ----------------------------')
                    print('suspected a malicious behaviour from pogram', suspect_name)

                    inp = user_input.timout_input(time=3)
                    if inp.lower() in ['y','yes','ok']:                                        
                        print('Booooom Headshot Process', prog_pid)
                        terminate(prog_pid)
                        # os.system("taskkill /f /im [suspect_name].exe")
                    elif inp.lower() in ["n","no"]:
                        white_list[prog_pid] = 1

def main():
    Main_Monitor(monitor.terminate_process,
                 monitor.getListOfProcessSortedByMemory)

if __name__ == "__main__":
    main()
